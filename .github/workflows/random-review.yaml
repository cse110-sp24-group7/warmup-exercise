name: Assign Random Reviewers

on:
  pull_request:
    types: [opened, reopened]

jobs:
  assign_random_reviewers:
    runs-on: ubuntu-latest

    steps:
      - name: Get pull request details
        id: pr
        run: |
          pull_request_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          repo_owner=$(jq --raw-output .repository.owner.login "$GITHUB_EVENT_PATH")
          repo_name=$(jq --raw-output .repository.name "$GITHUB_EVENT_PATH")
          curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$repo_owner/$repo_name/pulls/$pull_request_number" \
            > pull_request.json

      - name: Find potential reviewers
        id: potential_reviewers
        run: |
          current_assignees=$(jq --raw-output '.assignees | .[].login' pull_request.json)
          pr_user=$(jq --raw-output '.user.login' pull_request.json)
          all_users=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$repo_owner/$repo_name/collaborators")
          random_reviewers=()
          while IFS= read -r line; do
            if ! [[ $current_assignees =~ $line ]] && [[ $line != $pr_user ]]; then
              random_reviewers+=("$line")
            fi
          done <<< "$(echo "$all_users" | jq -r '.[].login')"
          random_reviewers=($(shuf -e "${random_reviewers[@]}"))
          random_reviewers=("${random_reviewers[@]:0:2}")
          echo "::set-output name=random_reviewers::${random_reviewers[*]}"

      - name: Assign random reviewers
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.payload.pull_request;
            const github = context.github;
            const randomReviewers = '${{ steps.potential_reviewers.outputs.random_reviewers }}'.split(' ');
            await github.pulls.createReviewRequest({
              owner,
              repo,
              pull_number: number,
              reviewers: randomReviewers
            });
